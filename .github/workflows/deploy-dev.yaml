name: Deploy To Dev

on:
  workflow_dispatch:

env:
  ELASTIC_BEANSTALK_NAME: hippo-booking-api
  ELASTIC_BEANSTALK_ENV_NAME: hippo-booking-api-env

jobs:
        
  build-backend:
    name: 'Build Back End API'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      
      - name: Restore dependencies
        working-directory: ./src
        run: dotnet restore

      - name: Build API
        working-directory: ./src
        run: dotnet build --no-restore

      - name: Run Application Unit Tests
        run: dotnet test src/api/tests/**/Hippo.Booking.Application.Tests.csproj --no-build --verbosity normal

      - name: Run Core Unit Tests
        run: dotnet test src/api/tests/**/Hippo.Booking.Core.Tests.csproj --no-build --verbosity normal

      - name: Run Docker Compose
        run: docker compose -f src/infrastructure/docker/docker-compose-ci.yml up -d

      - name: Sleep for 5 seconds
        run: sleep 5s
        shell: bash

      - name: Run Integration Tests
        run: dotnet test src/api/tests/**/Hippo.Booking.Integration.Tests.csproj --no-build --verbosity normal

      - name: Publish API
        run: |
          dotnet publish src/api/Hippo.Booking.API/Hippo.Booking.API.csproj -c Release --output "publish"
          cd publish
          zip -r ../${{github.run_id}}.zip .

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4.3.3
        with:
          name: deploy-files
          path: ${{github.run_id}}.zip
          
  build-frontend:
    name: 'Build Front End App'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Enable Corepack
        run: corepack enable

      - name: Run install
        uses: borales/actions-yarn@v4
        with:
          cmd: install
          dir: ./src/web/hippo-booking

      - name: Build production bundle
        uses: borales/actions-yarn@v4
        with:
          cmd: build
          dir: ./src/web/hippo-booking

      - name: Test the app
        uses: borales/actions-yarn@v4
        with:
          cmd: ci-test
          dir: ./src/web/hippo-booking
          
#      - name: Run Cypress Tests
#        working-directory: ./src/web/hippo-booking
#        run: |
#          npx cypress run --component


  deploy-infrastructure:
    name: 'Provision Dev Infrastructure'
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    environment:
      name: 'Development'
    defaults:
      run:
        working-directory: ./src/infrastructure/terraform
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan

  deploy-backend:
    name: 'Deploy Backend to Beanstalk'
    runs-on: ubuntu-latest
    needs: [ deploy-infrastructure ]
    environment:
      name: 'Development'
    steps:
      - uses: actions/download-artifact@v4.1.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy to Elastic Beanstalk
        run: |
          aws s3 cp "deploy-files/${{github.run_id}}.zip" s3://elasticbeanstalk-eu-west-1-${{ secrets.AWS_ACCOUNT_ID }}/artifact/hippo-booking-api/
          aws elasticbeanstalk create-application-version --application-name $ELASTIC_BEANSTALK_NAME --version-label ${{github.run_id}} --description ${{github.run_id}} --source-bundle S3Bucket="elasticbeanstalk-eu-west-1-${{ secrets.AWS_ACCOUNT_ID }}",S3Key="artifact/hippo-booking-api/${{github.run_id}}.zip"
          aws elasticbeanstalk update-environment --application-name $ELASTIC_BEANSTALK_NAME --environment-name $ELASTIC_BEANSTALK_ENV_NAME --version-label ${{github.run_id}}
          aws elasticbeanstalk wait environment-updated --application-name $ELASTIC_BEANSTALK_NAME --environment-name $ELASTIC_BEANSTALK_ENV_NAME