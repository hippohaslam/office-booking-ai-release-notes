name: Deploy To Dev

on:
  workflow_dispatch:

jobs:
        
  build-backend:
    name: 'Build Back End API'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      
      - name: Restore dependencies
        run: dotnet restore

      - name: Build API
        run: dotnet build --no-restore

      - name: Run Application Unit Tests
        run: dotnet test api/tests/**/Hippo.Booking.Application.Tests.csproj --no-build --verbosity normal

      - name: Run Core Unit Tests
        run: dotnet test api/tests/**/Hippo.Booking.Core.Tests.csproj --no-build --verbosity normal
          
  build-frontend:
    name: 'Build Front End App'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          
      - name: Enable Corepack
        run: corepack enable

      - name: Run install
        uses: borales/actions-yarn@v4
        with:
          cmd: install
          dir: ./src/web/hippo-booking

      - name: Build production bundle
        uses: borales/actions-yarn@v4
        with:
          cmd: build
          dir: ./src/web/hippo-booking
          
      - name: Test the app
        uses: borales/actions-yarn@v4
        with:
          cmd: ci-test
          dir: ./src/web/hippo-booking
    

  package:
    name: 'Package API In Docker'
    if: github.event_name != 'pull_request'
    needs: [build-backend]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
      
    - name: Lowercase the repo name and username
      run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
      
    - name: Build Back End API Docker Image
      run: |
        docker build . -t ghcr.io/${{ env.REPO }}:${{ github.sha }} -f api/Hippo.Booking.API/Dockerfile
      
    - uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Push Back End API Docker Image
      run: docker push ghcr.io/${{ env.REPO }}:${{ github.sha }}
      
  deploy-backend:
    name: Deploy API
    if: github.event_name != 'pull_request'
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: package
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.DEV_AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.DEV_AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: 'ghcr.io/${{ env.REPO }}:${{ github.sha }}'

  deploy-frontend:
    permissions:
      contents: read # for actions/checkout to fetch code
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    name: Deploy Front End
    needs: [build-frontend]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.DEV_AZURE_STATIC_WEB_APP_DEPLOYMENT_TOKEN }} # secret containing api token for app
#          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match you app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: 'src/web/hippo-booking'
#          api_location: ${{ env.API_LOCATION }}
          app_artifact_location: 'dist'
          ###### End of Repository/Build Configurations ######
